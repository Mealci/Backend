name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  docker:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: Mealci
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: --health-cmd "pg_isready -U postgres" --health-timeout 30s --health-retries 3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull Docker image for the app
        run: |
          docker pull your-docker-username/your-image-name:latest  # Remplacez par votre image

      - name: Run app container
        run: |
          docker network create my_network  # Créer un réseau Docker
          docker run -d --name db --network my_network postgres:latest  # Lancer PostgreSQL
          docker run -d --name app --network my_network -e DB_HOST=db -e DB_PORT=5432 -e DB_NAME=Mealci -e DB_USER=postgres -e DB_PASSWORD=postgres -p 8080:8080 your-docker-username/your-image-name:latest  # Lancer votre application

      - name: Wait for app to start
        run: |
          sleep 30  # Attendre que l'application démarre (ajustez en fonction de vos besoins)

      - name: Run tests
        run: |
          # Ajoutez ici vos commandes pour tester l'application, par exemple :
          curl http://localhost:8080/health  # Exemple d'appel pour tester la disponibilité de l'app

      - name: Clean up Docker containers
        run: |
          docker stop app db
          docker rm app db
          docker network rm my_network
